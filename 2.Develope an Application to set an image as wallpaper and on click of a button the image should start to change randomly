Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<ImageView
android:id="@+id/imageView"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:scaleType="centerCrop" />
<Button
android:id="@+id/changeWallpaperButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_centerHorizontal="true"
android:layout_alignParentBottom="true"
android:layout_marginBottom="16dp"
android:text="Change Wallpaper" />
</RelativeLayout>
MainActivity.java:
package com.example.activity.wallpaperchange;
import android.Manifest;
import android.annotation.SuppressLint;
import android.app.WallpaperManager;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import com.example.activity.wallpaperchange.R;
import java.io.IOException;
import java.util.Random;
public class MainActivity extends AppCompatActivity {
private static final int REQUEST_CODE_PERMISSION = 123;
private ImageView imageView;
private Button changeWallpaperButton;
private int[] wallpaperImages = {

R.drawable.wallpaper1,
R.drawable.wallpaper2,
R.drawable.wallpaper3
// Add more wallpaper images as needed
};
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
imageView = findViewById(R.id.imageView);
changeWallpaperButton = findViewById(R.id.changeWallpaperButton);
// Set initial wallpaper
setRandomWallpaper();
// Set click listener for the button
changeWallpaperButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
// Change wallpaper on button click
setRandomWallpaper();
}
});
// Request permission if not granted
requestPermission();
}
private void requestPermission() {
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
ContextCompat.checkSelfPermission(this, Manifest.permission.SET_WALLPAPER)
!= PackageManager.PERMISSION_GRANTED) {
ActivityCompat.requestPermissions(
this,
new String[]{Manifest.permission.SET_WALLPAPER},
REQUEST_CODE_PERMISSION
);
}
}
@SuppressLint("MissingSuperCall")
@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[]
grantResults) {
if (requestCode == REQUEST_CODE_PERMISSION && grantResults.length > 0
&& grantResults[0] == PackageManager.PERMISSION_GRANTED) {
// Permission granted
}
}
private void setRandomWallpaper() {
// Choose a random wallpaper image
int randomIndex = new Random().nextInt(wallpaperImages.length);
int resourceId = wallpaperImages[randomIndex];
// Set the chosen image as wallpaper

try {
WallpaperManager.getInstance(this).setResource(resourceId);
} catch (IOException e) {
e.printStackTrace();
}
// Set the chosen image in the ImageView
imageView.setImageResource(resourceId);
}
}
